"""Add multi-tenant CA firm and user models

Revision ID: 7fae4977ee93
Revises: a01c4680c601
Create Date: 2025-10-07 01:22:52.995693

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7fae4977ee93'
down_revision: Union[str, Sequence[str], None] = 'a01c4680c601'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ca_firms',
    sa.Column('firm_id', sa.String(), nullable=False),
    sa.Column('firm_name', sa.String(), nullable=False),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('gstin', sa.String(), nullable=True),
    sa.Column('pan', sa.String(), nullable=True),
    sa.Column('firm_registration_no', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('pincode', sa.String(), nullable=True),
    sa.Column('subscription_tier', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('firm_id')
    )
    op.create_index('idx_firm_active', 'ca_firms', ['is_active'], unique=False)
    op.create_index('idx_firm_gstin', 'ca_firms', ['gstin'], unique=False)
    op.create_index('idx_firm_name', 'ca_firms', ['firm_name'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('firm_id', sa.String(), nullable=True),  # Nullable for Trenor admins
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('TRENOR_ADMIN', 'CA_FIRM_ADMIN', 'CA_STAFF', 'CA_VIEWER', 'CLIENT_USER', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['firm_id'], ['ca_firms.firm_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_firm_role', 'users', ['firm_id', 'role'], unique=False)
    op.create_table('user_entity_map',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('company_id', sa.String(), nullable=False),
    sa.Column('permissions', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['entities.company_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_entity_company', 'user_entity_map', ['company_id'], unique=False)
    op.create_index('idx_user_entity_user', 'user_entity_map', ['user_id'], unique=False)
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('entities') as batch_op:
        batch_op.add_column(sa.Column('firm_id', sa.String(), nullable=True))  # Initially nullable
        batch_op.create_index('ix_entities_firm_id', ['firm_id'], unique=False)
        batch_op.create_foreign_key('fk_entities_firm_id', 'ca_firms', ['firm_id'], ['firm_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('entities') as batch_op:
        batch_op.drop_constraint('fk_entities_firm_id', type_='foreignkey')
        batch_op.drop_index('ix_entities_firm_id')
        batch_op.drop_column('firm_id')
    op.drop_index('idx_user_entity_user', table_name='user_entity_map')
    op.drop_index('idx_user_entity_company', table_name='user_entity_map')
    op.drop_table('user_entity_map')
    op.drop_index('idx_user_firm_role', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_active', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_firm_name', table_name='ca_firms')
    op.drop_index('idx_firm_gstin', table_name='ca_firms')
    op.drop_index('idx_firm_active', table_name='ca_firms')
    op.drop_table('ca_firms')
    # ### end Alembic commands ###
